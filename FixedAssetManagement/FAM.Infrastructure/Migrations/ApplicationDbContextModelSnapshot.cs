// <auto-generated />
using System;
using FAM.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FAM.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Entities.AssetCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssetGroupId");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CategoryName");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Code");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedIP")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("SortOrder");

                    b.HasKey("Id");

                    b.HasIndex("AssetGroupId")
                        .IsUnique();

                    b.ToTable("AssetCategories", "FixedAsset");
                });

            modelBuilder.Entity("Core.Domain.Entities.AssetGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Code");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedIP")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GroupName");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("AssetGroup", "FixedAsset");
                });

            modelBuilder.Entity("Core.Domain.Entities.DepreciationGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetGroupId")
                        .HasColumnType("int");

                    b.Property<string>("BookType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedIP")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DepreciationGroupName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DepreciationMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ResidualValue")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("SortOrder");

                    b.Property<int>("UsefulLife")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetGroupId");

                    b.ToTable("DepreciationGroup", "FixedAsset");
                });

            modelBuilder.Entity("Core.Domain.Entities.AssetCategories", b =>
                {
                    b.HasOne("Core.Domain.Entities.AssetGroup", "AssetGroup")
                        .WithOne("AssetCategories")
                        .HasForeignKey("Core.Domain.Entities.AssetCategories", "AssetGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetGroup");
                });

            modelBuilder.Entity("Core.Domain.Entities.DepreciationGroups", b =>
                {
                    b.HasOne("Core.Domain.Entities.AssetGroup", "AssetGroup")
                        .WithMany("DepreciationGroups")
                        .HasForeignKey("AssetGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssetGroup");
                });

            modelBuilder.Entity("Core.Domain.Entities.AssetGroup", b =>
                {
                    b.Navigation("AssetCategories");

                    b.Navigation("DepreciationGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
